plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.diffplug.spotless" version "5.1.0"
	id 'java'
	id 'jacoco'
}

group = 'io.github.dschanoeh'
version = '0.6.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}
configurations.all {
	resolutionStrategy.dependencySubstitution.all { dependency ->
		if (dependency.requested instanceof ModuleComponentSelector && dependency.requested.module == 'spring-boot-starter-logging') {
			dependency.useTarget("org.springframework.boot:spring-boot-starter-log4j2:$dependency.requested.version", 'Use Log4j2 instead of Logback')
		}
	}
	resolutionStrategy.dependencySubstitution.all { dependency ->
		if (dependency.requested instanceof ModuleComponentSelector && dependency.requested.module == 'logback-classic') {
			dependency.useTarget("org.springframework.boot:spring-boot-starter-log4j2:$dependency.requested.version", 'Use Log4j2 instead of Logback')
		}
	}
}

spotless {
	java {
		indentWithSpaces()
		trimTrailingWhitespace()
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	testCompileOnly 'org.projectlombok:lombok:1.18.22'
	testImplementation 'org.junit-pioneer:junit-pioneer:1.4.2'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
	testImplementation 'io.specto:hoverfly-java-junit5:0.14.1'
	testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.7.2")
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.2")
	testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.7.2")
}

// Necessary to get build info (including version) within the application
springBoot {
	buildInfo()
}

jacocoTestReport {
	dependsOn test
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.enabled = true
		html.enabled = true
	}
}
