plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.diffplug.spotless' version '6.6.1'
	id 'java'
	id 'jacoco'
	id "com.github.node-gradle.node" version "3.3.0"
}

group = 'io.github.dschanoeh'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}
configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
		// Required because hoverfly is bringing it
		exclude group: 'ch.qos.logback', module: 'logback-classic'
	}
}

spotless {
	java {
		indentWithSpaces()
		trimTrailingWhitespace()
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'de.svenkubiak:jpushover:6.0.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testImplementation 'org.junit-pioneer:junit-pioneer:1.7.0'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
	testImplementation 'io.specto:hoverfly-java-junit5:0.14.1'
	testRuntimeOnly('org.junit.platform:junit-platform-launcher:1.8.2')
	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.8.2')
	testRuntimeOnly('org.junit.vintage:junit-vintage-engine:5.8.2')
}

// Necessary to get build info (including version) within the application
springBoot {
	buildInfo()
}

jacocoTestReport {
	dependsOn test
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}

// Frontend build configuration
node {
	version = '16.15.0'
	npmVersion = '8.10.0'
	nodeModulesDir = file("./src/frontend")
}
task npmBuild(type: NpmTask, dependsOn: npmInstall) {
	group = 'node'
	args = ['run', 'build']
}
task copyFrontendToBuild(type: Copy) {
	dependsOn 'npmBuild'
	from "$projectDir/src/frontend/dist/"
	into "$buildDir/resources/main/static"
}
processResources {
	dependsOn 'copyFrontendToBuild'
}